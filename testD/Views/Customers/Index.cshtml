@model IEnumerable<testD.Models.Customer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br>
<br>

<div class="form-horizontal">
    <h4>CUSTOMER MANAGEMENT</h4>
</div>
    <p>
        @*<button onclick="location.href='@Url.Action("Create", "Customers")';
return false;" class="btn btn-default">
            Create New Customer

        </button>*@

          
    </p>
    <table id="example" class="display select" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                <th>
                    @Html.DisplayNameFor(model => model.customerFName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customerLName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customerAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customerPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customerEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.customerState)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerFName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerLName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.customerState)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.customerId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.customerId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.customerId })
                    </td>
                </tr>
            }
        </tbody>
    </table>

<script>

    $(document).ready(function () {


        var table = $('#example').DataTable({

            'columnDefs': [{
                'targets': 0,
                'searchable': false,
                'orderable': false,
                'className': 'dt-body-center',
                'render': function (data, type, full, meta) {
                    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                }
            }],
            'order': [[1, 'asc']]
        });

        // Handle click on "Select all" control
        $('#example-select-all').on('click', function () {
            // Get all rows with search applied
            var rows = table.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
        });

        // Handle click on checkbox to set state of "Select all" control
        $('#example tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            if (!this.checked) {
                var el = $('#example-select-all').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });

        // Handle form submission event
        $('#frm-example').on('submit', function (e) {
            var form = this;

            // Iterate over all checkboxes in the table
            table.$('input[type="checkbox"]').each(function () {
                // If checkbox doesn't exist in DOM
                if (!$.contains(document, this)) {
                    // If checkbox is checked
                    if (this.checked) {
                        // Create a hidden element
                        $(form).append(
                           $('<input>')
                              .attr('type', 'hidden')
                              .attr('name', this.name)
                              .val(this.value)
                        );
                    }
                }
            });
        });
    });



</script>
